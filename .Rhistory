ZALAVARM_pca <- prcomp(ZALAVARM[3:4], scale = FALSE)
ZALAVARM_pca
summary(ZALAVARM_pca)
predict(ZALAVARM_pca)[,1]
mean(predict(ZALAVARM_pca)[,1])
ZALAVARM$PC1 <- predict(AINUM_pca)[,1]
ZALAVARM$PC2 <- predict(AINUM_pca)[,2]
ZALAVARM$PC3 <- predict(AINUM_pca)[,3]
ZALAVARM$PC4 <- predict(AINUM_pca)[,4]
ZALAVARM$PC5 <- predict(AINUM_pca)[,5]
ZALAVARM$PC1 <- predict(ZALAVARM_pca)[,1]
ZALAVARM$PC2 <- predict(ZALAVARM_pca)[,2]
ZALAVARM$PC3 <- predict(ZALAVARM_pca)[,3]
ZALAVARM$PC4 <- predict(ZALAVARM_pca)[,4]
ZALAVARM$PC5 <- predict(ZALAVARM_pca)[,5]
print(ZALAVARM_pca)
ZALAVARM$PC3 <- predict(ZALAVARM_pca)[,3]
predict(ZALAVARM_pca)[,1]
summary(ZALAVARM_pca)
ZALAVARM5_pca <- prcomp(ZALAVARM[3:10], scale = FALSE)
print(ZALAVARM5_pca)
print(ZALAVARM_pca)
summary(ZALAVARM5_pca)
round(cor(ZALAVARM[3:10]) ,2)
ZALAVARM_pca <- prcomp(ZALAVARM[3:4], scale = FALSE)
print(ZALAVARM_pca)
summary(ZALAVARM_pca)
round(cor(ZALAVARM[3:4]) ,2)
summary(round(cor(ZALAVARM[3:4]) ,2))
ZALAVARM5_pca <- prcomp(ZALAVARM[3:10], scale = FALSE)
ZALAVARM5_pca <- prcomp(ZALAVARM[3:10], scale = TRUE)
Howells <- read.csv("http://math.mercyhurst.edu/~sousley/STAT_139/data/Howells.csv", header=T)
ZALAVARM <- Howells[which(Howells$PopSex =='ZALAVARM'), c('ID', 'PopSex', 'GOL', 'BNL', 'WNB', 'DKB',
'EKB', 'PAC', 'NLH', 'NPH' )]
ZALAVARM5_pca <- prcomp(ZALAVARM[3:10], scale = FALSE)
ZALAVARM5_pcaCorr <- prcomp(ZALAVARM[3:10], scale = TRUE)
print(ZALAVARM5_pca)
print(ZALAVARM5_pcaCorr)
install.packages("heplots")
install.packages("candisc")
install.packages("candisc")
library(sqldf)
library(candisc)
BWFM4groups1 <- read.csv('http://math.mercyhurst.edu/~sousley/STAT_139/data/BWFM4groups1.csv')
BWFM4 <- sqldf("select item, pop, sex, popsex, GOL, NOL, BNL, BPL, MDH, DKB, SSR
from BWFM4groups1")
BWFM4 <- na.omit(BWFM4)
# do a regression of measurements and groups using dummy variables (sex and pop)
FourGrpLM <- lm(cbind(GOL, NOL, BNL, BPL, MDH, DKB, SSR) ~ sex + pop, data=BWFM4)
Anova(FourGrpLM,test="Wilks")
plot(FourGrpCan)
FourGrpLM <- lm(cbind(GOL, NOL, BNL, BPL, MDH, DKB, SSR) ~ popsex, data=BWFM4)
Anova(FourGrpLM,test="Wilks")
FourGrpCan <- candisc(FourGrpLM, term="popsex")
plot(FourGrpCan)
heplot(FourGrpCan)
heplot3d(FourGrpCan, wire=FALSE, scale = 15)
Howells <- read.csv('http://math.mercyhurst.edu/~sousley/STAT_139/data/howells.csv')
HBNMF <- Howells[which(Pop == 'NORSE' | Pop == 'BERG'),c("ID", "Sex", "Pop","PopSex", "GOL","NOL","BNL","BBH","XCB")]
# classify and use cross-validation (always!)
HBNMF.lda <- lda(PopSex ~ GOL+NOL+BNL+BBH+XCB, data = HBNMF, CV = T, priors = c(1,1,1,1))
Howells <- read.csv('http://math.mercyhurst.edu/~sousley/STAT_139/data/Howells.csv')
HBNMF <- Howells[which(Pop == 'NORSE' | Pop == 'BERG'),c("ID", "Sex", "Pop","PopSex", "GOL","NOL","BNL","BBH","XCB")]
# classify and use cross-validation (always!)
HBNMF.lda <- lda(PopSex ~ GOL+NOL+BNL+BBH+XCB, data = HBNMF, CV = T, priors = c(1,1,1,1))
Howells <- read.csv('http://math.mercyhurst.edu/~sousley/STAT_139/data/Howells.csv', as.is = T);
attach(Howells);
HBNMF <- Howells[which(Pop == 'NORSE' | Pop == 'BERG'),c("ID", "Sex", "Pop", "PopSex", "GOL","NOL","BNL","BBH","XCB")];
library(MASS);
# classify and use cross-validation (always!);
HBNMF.lda <- lda(PopSex ~ GOL+NOL+BNL+BBH+XCB, data = HBNMF, CV = T, priors = c(1,1,1,1) );
HBNMF.lda
HBNMF
cov(HBNMF)
round(cov(HBNMF[5:9], 2))
round(cov(HBNMF[5:8], 2))
HBNMF
round(cor(HBNMF[5:9]) ,2)
round(cov(HBNMF[5:9]) ,2)
help(mahalanobis)
mahalanobis((0,0),(2,2), cov(HBNMF[, c(5:6)]))
mahalanobis(c(0,0),c(2,2), cov(HBNMF[, c(5:6)]))
mahalanobis(c(180,178),c(178,180),cov(HBNMF[, c(5:6)]))
mahalanobis(c(180,178),c(182,18),cov(HBNMF[, c(5:6)]))
mahalanobis(c(580,578),c(582,580),cov(HBNMF[, c(5:6)]))
mahalanobis(c(180,178),c(182,180),cov(HBNMF[, c(5:6)]))
mahalanobis(c(2,0),c(0,2), cov(HBNMF[, c(5:6)]))
mahalanobis(c(180,178),c(178,180), cov(HBNMF[, c(5:6)]))
mahalanobis(c(0,0),c(0,4), cov(HBNMF[, c(5:6)]))
mahalanobis(c(180,178),c(180,182), cov(HBNMF[, c(5:6)]))
mahalanobis(c(0,0),c(2,2), cov(HBNMF[, c(7:8)]))
mahalanobis(c(0,0),c(2,2), cov(HBNMF[, c(5,8)]))
mahalanobis(c(0,0),c(2,2), cov(HBNMF[, c(5,6)]))
mahalanobis(c(180,178),c(182,180),cov(HBNMF[, c(5:6)]))
c(0,0)
HBNMF
mahalanobis(c(0,0),c(50,50), cov(HBNMF[, c(5:6)]))
mahalanobis(c(0,0),c(50,50))
HBNMF.lda
mahalanobis(c(0,0),c(2,2), cov(HBNMF[, c(5,9)]))
mahalanobis(c(0,0),c(2,2), cov(HBNMF[, c(5,6)]))
mahalanobis(c(0,0),c(2,2), cov(HBNMF[, c(5,6)]))
mahalanobis(c(180,178),c(182,180),cov(HBNMF[, c(5:6)]))
mahalanobis(c(580,578),c(582,580),cov(HBNMF[, c(5:6)]))
sqrt(8)
mahalanobis(c(2,0),c(0,2), cov(HBNMF[, c(5:7)]))
mahalanobis(c(2,0),c(0,2), cov(HBNMF[, c(5:6)]))
mahalanobis(c(180,178),c(178,180), cov(HBNMF[, c(5:6)]))
mahalanobis(c(0,0),c(2,2), cov(HBNMF[, c(5,6)]), inverted = FALSE)
mahalanobis(c(0,0),c(0,4), cov(HBNMF[, c(5:6)]))
mahalanobis(c(180,178),c(178,180), cov(HBNMF[, c(5:6)]))
mahalanobis(c(0,0),c(2,2), cov(HBNMF[, c(5,9)]))
mahalanobis(c(180,178),c(180,182), cov(HBNMF[, c(5,9)]))
sqrt(8)
HBNMF.lda
table(HBNMF$PopSex, HBNMF.lda$class)
ct<-table(HBNMF$PopSex, HBNMF.lda$class)
prob.table(ct, 1)
prop.table(ct, 1)
help(confusionMatrix)
help("matrix")
help(Confusionmatrix)
help(confusionMatrix)
confusionMatrix(ct)
library(caret)
install.packages("caret")
library(caret)
confusionMatrix(HBNMF.lda$class, HBNMF$PopSex)
confusionMatrix(HBNMF.lda$class, HBNMF$PopSex)
HBNMF2 <- Howells[which(Pop == 'BERG'),c("ID", "Sex", "Pop", "PopSex", "GOL","NOL","BNL","BBH","XCB")];
HBNMF.lda2 <- lda(PopSex ~ GOL+NOL+BNL+BBH+XCB, data = HBNMF2, CV = T, priors = c(1,1,1,1) );
ct2<-table(HBNMF2$PopSex, HBNF.lda2$class)
ct2<-table(HBNMF2$PopSex, HBNMF.lda2$class)
ct2
prob.table(ct2, 1)
prop.table(ct2, 1)
confusionMatrix(HBNMF.lda2$class, HBNMF2$PopSex)
mahalanobis(c(180,178),c(180,182), cov(HBNMF[, c(5:6)]))
Howells <- read.csv('http://math.mercyhurst.edu/~sousley/STAT_139/data/Howells.csv', as.is = T);
attach(Howells);
HBNMF <- Howells[which(Pop == 'NORSE' | Pop == 'BERG'),c("ID", "Sex", "Pop", "PopSex", "GOL","NOL","BNL","BBH","XCB")];
library(MASS);
# classify and use cross-validation (always!);
HBNMF.lda <- lda(PopSex ~ GOL+NOL+BNL+BBH+XCB, data = HBNMF, CV = T, priors = c(1,1,1,1) );
round(cov(HBNMF[5:9]) ,2)
mahalanobis(c(180,178),c(180,182), cov(HBNMF[, c(5:6)]))
HBNMF.lda
ct<-table(HBNMF$PopSex, HBNMF.lda$class)
prop.table(ct, 1)
help(confusionMatrix)
confusionMatrix(ct)
library(caret)
confusionMatrix(HBNMF.lda$class, HBNMF$PopSex)
HBNMF2 <- Howells[which(Pop == 'BERG'),c("ID", "Sex", "Pop", "PopSex", "GOL","NOL","BNL","BBH","XCB")];
HBNMF.lda2 <- lda(PopSex ~ GOL+NOL+BNL+BBH+XCB, data = HBNMF2, CV = T, priors = c(1,1,1,1) );
ct2<-table(HBNMF2$PopSex, HBNMF.lda2$class)
ct2
prop.table(ct2, 1)
confusionMatrix(HBNMF.lda2$class, HBNMF2$PopSex)
install.packages("AER")
l
library(igraph)
library(graphTweets)
### Scraping Twitter Data in R and Text Analysis
library(twitteR)
library(ROAuth)
library(httr)
library(plyr)
library(tm)
install.packages("igraph")
install.packages("graphTweets")
install.packages("twitteR")
install.packages("ROAuth")
install.packages("httr")
install.packages("plyr")
install.packages("tm")
library(igraph)
library(graphTweets)
### Scraping Twitter Data in R and Text Analysis
library(twitteR)
library(ROAuth)
library(httr)
library(plyr)
library(tm)
pi_key <- "B4phyM9cP5I73JNWGWqfLsRCu"
api_secret <- "9NythHt3r1z10PHEquilHWg8eYlowHHzQIXLlGbmiQr5FfUTID"
access_token <- "2845584590-gp5fkyGlkBeZY9GQA4BfHwMqSDWRgYhm8Dkq06l"
access_token_secret <- "7IMDiZJLcoAJRRgj25H5D4YfKKoSdRiNPAGXmTXqi2y5z"
setup_twitter_oauth(api_key, api_secret, access_token, access_token_secret)
api_key <- "B4phyM9cP5I73JNWGWqfLsRCu"
api_secret <- "9NythHt3r1z10PHEquilHWg8eYlowHHzQIXLlGbmiQr5FfUTID"
access_token <- "2845584590-gp5fkyGlkBeZY9GQA4BfHwMqSDWRgYhm8Dkq06l"
access_token_secret <- "7IMDiZJLcoAJRRgj25H5D4YfKKoSdRiNPAGXmTXqi2y5z"
setup_twitter_oauth(api_key, api_secret, access_token, access_token_secret)
weets <- searchTwitter("Harvey", n=1000, lang="en")
tweets <- searchTwitter("Harvey", n=1000, lang="en")
tw_df <- twListToDF(tweets)
edges <- getEdges(data = tw_df, tweets = "text", source = "screenName", "retweetCount", str.length = 20)
nodes <- getNodes(edges, source = "source", target="target")
g <- graph.data.frame(edges, directed = TRUE, vertices = nodes)
g
view(g)
View(g)
help(igraph)
plot(g)
tkplot(g)
str(g)
str(tw_df)
head(tw_df$text)
View(tw_df)
write.graph(g, file="forgephi.graphml", format="graphml")
getwd()
install.packages("mvoutlier", dependencies=T);
library(mvoutlier);
# car;
install.packages("car");
library(car);
# outliers;
install.packages("outliers");
library(outliers);
install.packages("car")
AINUM <- read.csv("http://math.mercyhurst.edu/~sousley/STAT_139/data/AINUM.csv")
AINUF <- read.csv("http://math.mercyhurst.edu/~sousley/STAT_139/data/AINUF.csv")
Boxplot(AINUM$SIA, main = "Boxplot with record numbers");
library(car);
Boxplot(AINUM$SIA, main = "Boxplot with record numbers");
Boxplot(AINUM$SIA, main = "Boxplot with record numbers");
Boxplot(AINUM[-13, "SIA"], main = "Boxplot with record numbers");
outliers <- aq.plot(mtcars[c("mpg","disp","hp","drat","wt","qsec")], alpha = 0.05)
library(mvoutlier);
install.packages("caret")
AsianFusion <- read.csv("C:/Users/Andrew/Downloads/Asian_Fusion_Data (1).csv")
View(AsianFusion)
shapiro.test(AsianFusion$XML)
install.packages("car")
library("car", lib.loc="~/R/win-library/3.3")
Boxplot(AsianFusion$XML, labels = AsianFusion$Catkey, main = "Boxplot with ID")
# mvoutlier;
install.packages("mvoutlier", dependencies=T);
library(mvoutlier);
# car;
install.packages("car");
library(car);
# outliers;
install.packages("outliers");
install.packages("car")
outliers
AINUM <- read.csv("http://math.mercyhurst.edu/~sousley/STAT_139/data/AINUM.csv")
AINUF <- read.csv("http://math.mercyhurst.edu/~sousley/STAT_139/data/AINUF.csv")
Boxplot(AINUM[-13, "SIA"], main = "Boxplot with record numbers");
outliers <- aq.plot(mtcars[c("mpg","disp","hp","drat","wt","qsec")], alpha = 0.05)
library(outliers);
library(car);
AINUM <- read.csv("http://math.mercyhurst.edu/~sousley/STAT_139/data/AINUM.csv")
AINUF <- read.csv("http://math.mercyhurst.edu/~sousley/STAT_139/data/AINUF.csv")
Boxplot(AINUM[-13, "SIA"], main = "Boxplot with record numbers");
outliers <- aq.plot(mtcars[c("mpg","disp","hp","drat","wt","qsec")], alpha = 0.05)
library(mvoutlier);
AINUM <- read.csv("http://math.mercyhurst.edu/~sousley/STAT_139/data/AINUM.csv")
AINUF <- read.csv("http://math.mercyhurst.edu/~sousley/STAT_139/data/AINUF.csv")
Boxplot(AINUM[-13, "SIA"], main = "Boxplot with record numbers");
outliers <- aq.plot(mtcars[c("mpg","disp","hp","drat","wt","qsec")], alpha = 0.05)
shapiro.test(AsianFusion$FRC)
Boxplot(AsianFusion$FRC, labels = AsianFusion$Catkey, main = "Boxplot with ID")
shapiro.test(AsianFusion$FRF)
Boxplot(AsianFusion$FRF, labels = AsianFusion$Catkey, main = "Boxplot with ID")
shapiro.test(AsianFusion$PAC)
Boxplot(AsianFusion$PAC, labels = AsianFusion$Catkey, main = "Boxplot with ID")
Boxplot(AsianFusion$PAC, main = "Boxplot with ID")
help(Boxplot)
Boxplot(AsianFusion$PAC, labels=AsianFusion$Catkey, main = "Boxplot with ID")
Boxplot(AsianFusion$PAC, labels = AsianFusion$Sex, main = "Boxplot with ID")
Boxplot(AsianFusion$PAC, labels = AsianFusion$Record, main = "Boxplot with ID")
Boxplot(AsianFusion$PAC, labels = AsianFusion$Catkey, main = "Boxplot with ID")
Boxplot(AsianFusion$PAC, labels = AsianFusion$GOL, main = "Boxplot with ID")
Boxplot(AsianFusion$PAC, labels = AsianFusion$Record, main = "Boxplot with ID")
Boxplot(AsianFusion$FRF, labels = AsianFusion$Record, main = "Boxplot with ID")
Boxplot(AsianFusion$FRF, labels = AsianFusion$Catkey, main = "Boxplot with ID")
#PAC
Boxplot(AsianFusion$FRC, labels = AsianFusion$Catkey, main = "Boxplot with ID")
Boxplot(AsianFusion$FRC, labels = AsianFusion$Record, main = "Boxplot with ID")
Boxplot(AsianFusion$FRC, labels = AsianFusion$Record, main = "Boxplot with ID")
Boxplot(AsianFusion$FRF, labels = AsianFusion$Record, main = "Boxplot with ID")
shapiro.test(AsianFusion$PAC)
Boxplot(AsianFusion$PAC, labels = AsianFusion$Record, main = "Boxplot with ID")
shapiro.test(AsianFusion$PAF)
Boxplot(AsianFusion$PAF, labels = AsianFusion$Record, main = "Boxplot with ID")
shapiro.test(AsianFusion$OCC)
Boxplot(AsianFusion$OCC, labels = AsianFusion$Record, main = "Boxplot with ID")
shapiro.test(AsianFusion$OCF)
Boxplot(AsianFusion$OCF, labels = AsianFusion$Record, main = "Boxplot with ID")
shapiro.test(AsianFusion$OBH)
Boxplot(AsianFusion$OBH, labels = AsianFusion$Record, main = "Boxplot with ID")
hist(AsianFusion$OBH)
hist(AsianFusion$OCF)
hist(AsianFusion$OCC)
hist(AsianFusion$PAF)
hist(AsianFusion$PAC)
hist(AsianFusion$FRF)
hist(AsianFusion$FRC)
Boxplot(AsianFusion$OBH, labels = AsianFusion$Record, main = "Boxplot with ID")
shapiro.test(AsianFusion$FOL)
Boxplot(AsianFusion$FOL, labels = AsianFusion$Record, main = "Boxplot with ID")
Boxplot(AsianFusion$FOL, labels = AsianFusion$Record, main = "Boxplot with ID")
shapiro.test(AsianFusion$FOB)
Boxplot(AsianFusion$FOB, labels = AsianFusion$Record, main = "Boxplot with ID")
sum(AsianFusion)
setwd("C:/Users/Andrew/Desktop")
setwd("C:/Users/Andrew/Desktop/website")
install.packages("Lahman")
library(Lahman)
install.packages("dplyr")
library(dplyr)
summary(Lahman)
summary(LahmanData)
?Lahman
Batting
head(Batting)
Batting%>%
select(playerID,yearID,teamID,HR)
HR<-Batting%>%
select(playerID,yearID,teamID,HR)
HR
head(HR)
HR<-Batting%>%
select(playerID,yearID,teamID,HR)%>%
where(teamID = NYY)
HR<-Batting%>%
select(playerID,yearID,teamID,HR)%>%
filter(teamID = NYY)
HR<-Batting%>%
select(playerID,yearID,teamID,HR)%>%
filter(teamID == NYY)
HR<-Batting%>%
select(playerID,yearID,teamID,HR)%>%
filter(teamID == "NYA")
head(HR)
HR<-Batting%>%
select(playerID,yearID,teamID,HR)%>%
filter(teamID == "NYA" & yearID==1927)
HR
head(HR)
AsianFusion <- read.csv("C:/Users/Andrew/Downloads/Asian_Fusion_Data (1).csv")
View(AsianFusion)
shapiro.test(AsianFusion$FRC)
Boxplot(AsianFusion$FRC, labels = AsianFusion$Record, main = "Boxplot with ID")
library("car", lib.loc="~/R/win-library/3.3")
Boxplot(AsianFusion$FRC, labels = AsianFusion$Record, main = "Boxplot with ID")
summary(AsianFusion)
shapiro.test(AsianFusion$FRF)
Boxplot(AsianFusion$FRF, labels = AsianFusion$Record, main = "Boxplot with ID")
AsianFUsionNew<-AsianFusion$Record[-c(58,68,155,237,373,484,536,33,36,56,294)]
shapiro.test(AsianFusionNew$FRF)
AsianFusionNew
AsianFusionNew<-AsianFusion$Record[-c(58,68,155,237,373,484,536,33,36,56,294)]
shapiro.test(AsianFusionNew$FRF)
AsianFusionNew
view(AsianFusionNew)
AsianFusionNew<-AsianFusion[-c(AsianFusion$Record[58,68,155,237,373,484,536,33,36,56,294])]
AsianFusionNew<-AsianFusion[AsianFusion$Record != 58, 68, 155, 237, 373, 448, 452, 484, 536, 33, 36, 56, 294]
AsianFusion[which(AsianFusion$Record %in% BP),]
BP<-Boxplot(AsianFusion$FRF, labels = AsianFusion$Record, main = "Boxplot with ID")
AsianFusion[which(AsianFusion$Record %in% BP),]
AsianFusion[which(AsianFusion$Record %in% BP),]
bp
BP
AsianFusion[which(AsianFusion$Record %in% BP),]
AsianFusionNew<-AsianFusion[-which(AsianFusion$Record %in% BP),]
shapiro.test(AsianFusionNew$FRF)
Boxplot(AsianFusionNew$FRF, labels = AsianFusionNew$Record, main = "Boxplot with ID")
shapiro.test(AsianFusion$PAC)
BP2<-Boxplot(AsianFusion$PAC, labels = AsianFusion$Record, main = "Boxplot with ID")
BP2<-Boxplot(AsianFusion$PAC, labels = AsianFusion$Record, main = "Boxplot with ID")
AsianFusionNew<-AsianFusion[-which(AsianFusion$Record %in% BP2),]
shapiro.test(AsianFusionNew$PAC)
Boxplot(AsianFusionNew$PAC, labels = AsianFusionNew$Record, main = "Boxplot with ID")
hist(AsianFusionNew$PAC)
install.packages("outliers")
library(outliers)
chisq.out.test(AsianFusionNew$PAC)
shapiro.test(AsianFusion$PAF)
shapiro.test(AsianFusion$OCC)
BP3<-Boxplot(AsianFusion$OCC, labels = AsianFusion$Record, main = "Boxplot with ID")
shapiro.test(AsianFusion$PAF)
shapiro.test(AsianFusion$OCC)
BP3<-Boxplot(AsianFusion$OCC, labels = AsianFusion$Record, main = "Boxplot with ID")
BP3
shapiro.test(AsianFusionNew$OCC)
Boxplot(AsianFusionNew$OCC, labels = AsianFusionNew$Record, main = "Boxplot with ID")
BP3<-Boxplot(AsianFusion$OCC, labels = AsianFusion$Record, main = "Boxplot with ID")
Boxplot(AsianFusionNew$PAC, labels = AsianFusionNew$Record, main = "Boxplot with ID")
Boxplot(AsianFusion$PAC, labels = AsianFusion$Record, main = "Boxplot with ID")
Boxplot(AsianFusion$OCC, labels = AsianFusion$Record, main = "Boxplot with ID")
BP3<-Boxplot(AsianFusion$OCC, labels = AsianFusion$Record, main = "Boxplot with ID")
AsianFusionNew<-AsianFusion[-which(AsianFusion$Record %in% BP3),]
shapiro.test(AsianFusionNew$OCC)
Boxplot(AsianFusionNew$OCC, labels = AsianFusionNew$Record, main = "Boxplot with ID")
shapiro.test(AsianFusion$OCF)
Boxplot(AsianFusion$OCF, labels = AsianFusion$Record, main = "Boxplot with ID")
BP3<-Boxplot(AsianFusion$OCF, labels = AsianFusion$Record, main = "Boxplot with ID")
AsianFusionNew<-AsianFusion[-which(AsianFusion$Record %in% BP4),]
BP4<-Boxplot(AsianFusion$OCF, labels = AsianFusion$Record, main = "Boxplot with ID")
BP3<-Boxplot(AsianFusion$OCC, labels = AsianFusion$Record, main = "Boxplot with ID")
AsianFusionNew<-AsianFusion[-which(AsianFusion$Record %in% BP4),]
shapiro.test(AsianFusionNew$OCF)
Boxplot(AsianFusionNew$OCF, labels = AsianFusionNew$Record, main = "Boxplot with ID")
shapiro.test(AsianFusion$OBH)
Boxplot(AsianFusion$OBH, labels = AsianFusion$Record, main = "Boxplot with ID")
shapiro.test(AsianFusion$OBH)
BP5<-Boxplot(AsianFusion$OBH, labels = AsianFusion$Record, main = "Boxplot with ID")
AsianFusionNew<-AsianFusion[-which(AsianFusion$Record %in% BP5),]
shapiro.test(AsianFusionNew$OBH)
Boxplot(AsianFusionNew$OBH, labels = AsianFusionNew$Record, main = "Boxplot with ID")
BP5
view(AsianFusionNew)
View(AsianFusionNew)
BP<-Boxplot(AsianFusion$FRF, labels = AsianFusion$Record, main = "Boxplot with ID")
AsianFusionNew<-AsianFusion[-which(AsianFusion$Record %in% BP),]
BP2<-Boxplot(AsianFusion$PAC, labels = AsianFusion$Record, main = "Boxplot with ID")
AsianFusionNew<-AsianFusion[-which(AsianFusion$Record %in% BP2),]
BP<-Boxplot(AsianFusion$FRF, labels = AsianFusion$Record, main = "Boxplot with ID")
AsianFusionNew<-AsianFusion[-which(AsianFusion$Record %in% BP),]
BP2<-Boxplot(AsianFusion$PAC, labels = AsianFusion$Record, main = "Boxplot with ID")
AsianFusionNew<-AsianFusionNew[-which(AsianFusionNew$Record %in% BP2),]
BP3<-Boxplot(AsianFusion$OCC, labels = AsianFusion$Record, main = "Boxplot with ID")
AsianFusionNew<-AsianFusionNew[-which(AsianFusionNew$Record %in% BP3),]
BP4<-Boxplot(AsianFusion$OCF, labels = AsianFusion$Record, main = "Boxplot with ID")
AsianFusionNew<-AsianFusionNew[-which(AsianFusionNew$Record %in% BP4),]
View(AsianFusionNew)
shapiro.test(AsianFusionNew$FRF)
Boxplot(AsianFusionNew$FRF, labels = AsianFusionNew$Record, main = "Boxplot with ID")
BP5<-Boxplot(AsianFusion$OBH, labels = AsianFusion$Record, main = "Boxplot with ID")
AsianFusionNew<-AsianFusionNew[-which(AsianFusionNew$Record %in% BP5),]
shapiro.test(AsianFusionNew$OBH)
Boxplot(AsianFusionNew$OBH, labels = AsianFusionNew$Record, main = "Boxplot with ID")
hist(AsianFusionNew$OBH)
shapiro.test(AsianFusion$FOL)
BP6<-Boxplot(AsianFusion$FOL, labels = AsianFusion$Record, main = "Boxplot with ID")
AsianFusionNew<-AsianFusionNew[-which(AsianFusionNew$Record %in% BP6),]
Boxplot(AsianFusionNew$FOL, labels = AsianFusionNew$Record, main = "Boxplot with ID")
shapiro.test(AsianFusionNew$FOL)
hist(AsianFusionNew$FOL)
shapiro.test(AsianFusion$FOB)
BP7<-Boxplot(AsianFusion$FOB, labels = AsianFusion$Record, main = "Boxplot with ID")
BP7
AsianFusionNew<-AsianFusionNew[-which(AsianFusionNew$Record %in% BP7),]
Boxplot(AsianFusionNew$FOB, labels = AsianFusionNew$Record, main = "Boxplot with ID")
shapiro.test(AsianFusionNew$FOB)
Boxplot(AsianFusionNew$FOL, labels = AsianFusionNew$Record, main = "Boxplot with ID")
hist(AsianFusionNew$FOL)
shapiro.test(AsianFusionNew$FOL)
AsianFusionNew$FOB[-c(which.max(AsianFusionNew$FOB))]
AsianFusionNew<-AsianFusionNew$FOL[-c(which.max(AsianFusionNew$FOL))]
hist(AsianFusionNew$FOL)
AsianFusionNew$FOL[-c(which.max(AsianFusionNew$FOL))]
#FRC
shapiro.test(AsianFusion$FRC)
Boxplot(AsianFusion$FRC, labels = AsianFusion$Record, main = "Boxplot with ID")
#FRF
shapiro.test(AsianFusion$FRF)
BP<-Boxplot(AsianFusion$FRF, labels = AsianFusion$Record, main = "Boxplot with ID")
AsianFusionNew<-AsianFusion[-which(AsianFusion$Record %in% BP),]
shapiro.test(AsianFusionNew$FRF)
Boxplot(AsianFusionNew$FRF, labels = AsianFusionNew$Record, main = "Boxplot with ID")
#PAC
shapiro.test(AsianFusion$PAC)
BP2<-Boxplot(AsianFusion$PAC, labels = AsianFusion$Record, main = "Boxplot with ID")
AsianFusionNew<-AsianFusionNew[-which(AsianFusionNew$Record %in% BP2),]
shapiro.test(AsianFusionNew$PAC)
Boxplot(AsianFusionNew$PAC, labels = AsianFusionNew$Record, main = "Boxplot with ID")
chisq.out.test(AsianFusionNew$PAC)
#PAF
shapiro.test(AsianFusion$PAF)
Boxplot(AsianFusion$PAF, labels = AsianFusion$Record, main = "Boxplot with ID")
#OCC
shapiro.test(AsianFusion$OCC)
BP3<-Boxplot(AsianFusion$OCC, labels = AsianFusion$Record, main = "Boxplot with ID")
AsianFusionNew<-AsianFusionNew[-which(AsianFusionNew$Record %in% BP3),]
shapiro.test(AsianFusionNew$OCC)
Boxplot(AsianFusionNew$OCC, labels = AsianFusionNew$Record, main = "Boxplot with ID")
#OCF
shapiro.test(AsianFusion$OCF)
BP4<-Boxplot(AsianFusion$OCF, labels = AsianFusion$Record, main = "Boxplot with ID")
AsianFusionNew<-AsianFusionNew[-which(AsianFusionNew$Record %in% BP4),]
shapiro.test(AsianFusionNew$OCF)
Boxplot(AsianFusionNew$OCF, labels = AsianFusionNew$Record, main = "Boxplot with ID")
#OBH
shapiro.test(AsianFusion$OBH)
BP5<-Boxplot(AsianFusion$OBH, labels = AsianFusion$Record, main = "Boxplot with ID")
AsianFusionNew<-AsianFusionNew[-which(AsianFusionNew$Record %in% BP5),]
shapiro.test(AsianFusionNew$OBH)
Boxplot(AsianFusionNew$OBH, labels = AsianFusionNew$Record, main = "Boxplot with ID")
hist(AsianFusionNew$OBH)
#FOL
shapiro.test(AsianFusion$FOL)
BP6<-Boxplot(AsianFusion$FOL, labels = AsianFusion$Record, main = "Boxplot with ID")
AsianFusionNew<-AsianFusionNew[-which(AsianFusionNew$Record %in% BP6),]
Boxplot(AsianFusionNew$FOL, labels = AsianFusionNew$Record, main = "Boxplot with ID")
shapiro.test(AsianFusionNew$FOL)
hist(AsianFusionNew$FOL)
Boxplot(AsianFusionNew$FOL, labels = AsianFusionNew$Record, main = "Boxplot with ID")
#FOB
shapiro.test(AsianFusion$FOB)
BP7<-Boxplot(AsianFusion$FOB, labels = AsianFusion$Record, main = "Boxplot with ID")
AsianFusionNew<-AsianFusionNew[-which(AsianFusionNew$Record %in% BP7),]
Boxplot(AsianFusionNew$FOB, labels = AsianFusionNew$Record, main = "Boxplot with ID")
shapiro.test(AsianFusionNew$FOB)
hist(AsianFusionNew$FOL)
shapiro.test(AsianFusionNew$FOL)
shapiro.test(AsianFusion$FOL)
max(AsianFusionNew$FOL)
hist(AsianFusionNew$OBH)
